version: "3.7"
volumes:
  elasticsearch_data:
  elasticsearch_backups:
  status_db_data:
  status_monitoring_data:
  prometheus_data:
  grafana_data:
  traefik_acme_certs:

services:
  traefik:
    image: "traefik:1.7-alpine"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - type: bind
        source: ./traefik.toml
        target: /etc/traefik/traefik.toml
        read_only: true
      - type: bind
        source: ./monitoring_users_credentials.htdigest
        target: /srv/monitoring_users_credentials.htdigest
        read_only: true
      - type: volume
        source: traefik_acme_certs
        target: /acme_certs

  elasticsearch:
    image: "docker.elastic.co/elasticsearch/elasticsearch:7.1.1"
    environment:
      node.name: "elasticsearch"
      discovery.seed_hosts: "elasticsearch"
      cluster.name: "peertube-index-cluster"
      path.repo: "/backups"
      ES_JAVA_OPTS: "-Xms256m -Xmx256m"
    volumes:
      - type: volume
        source: elasticsearch_data
        target: /usr/share/elasticsearch/data
      - type: volume
        source: elasticsearch_backups
        target: /backups
    ulimits:
      memlock:
        soft: -1
        hard: -1

  status-db:
    image: "postgres:11"
    volumes:
      - type: volume
        source: status_db_data
        target: /var/lib/postgresql/data

  webapp:
    image: "peertube-index/app:prod"
    depends_on:
      - elasticsearch
    environment:
      ELASTICSEARCH_URL: 'http://elasticsearch:9200'
      STATUS_STORAGE_DATABASE_URL: 'ecto://postgres:@status-db/peertube_index'
      HTTP_API_PORT: 80

  error-pages:
    image: "peertube-index/error-pages:prod"

  scan-loop:
    image: "peertube-index/app:prod"
    depends_on:
      - elasticsearch
      - status-db
    environment:
      ELASTICSEARCH_URL: 'http://elasticsearch:9200'
      STATUS_STORAGE_DATABASE_URL: 'ecto://postgres:@status-db/peertube_index'
      HTTP_API_PORT: 80
    entrypoint:
      - sh
      - scan_loop.sh

  seed-loop:
    image: "peertube-index/app:prod"
    depends_on:
      - status-db
    environment:
      ELASTICSEARCH_URL: 'http://elasticsearch:9200'
      STATUS_STORAGE_DATABASE_URL: 'ecto://postgres:@status-db/peertube_index'
      HTTP_API_PORT: 80
    entrypoint:
      - sh
      - seed_loop.sh

  status-monitoring-updater:
    image: "peertube-index/status-monitoring-updater:prod"
    depends_on:
      - status-db
      - status-monitoring-db
    environment:
      SOURCE_HOST: 'status-db'
      SOURCE_USER: 'postgres'
      SOURCE_DATABASE: 'peertube_index'

  status-monitoring-db:
    image: "postgres:10"
    volumes:
      - type: volume
        source: status_monitoring_data
        target: /var/lib/postgresql/data

  prometheus:
    image: "prom/prometheus:v2.8.0"
    volumes:
      - type: volume
        source: prometheus_data
        target: /prometheus
      - type: bind
        source: ./prometheus.yml
        target: /etc/prometheus/prometheus.yml
        read_only: true

  grafana:
    image: "grafana/grafana:6.0.1"
    volumes:
      - type: volume
        source: grafana_data
        target: /var/lib/grafana

  node-exporter-relay:
    image: "peertube-index/node-exporter-relay:prod"
    volumes:
      - type: bind
        source: /tmp/node_exporter
        target: /node_exporter
