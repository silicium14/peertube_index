version: "3.7"

services:
  traefik:
    volumes:
      - type: bind
        source: ./traefik/traefik.dev.toml
        target: /etc/traefik/traefik.toml
        read_only: true
      - type: bind
        source: ./dev_compose_stack/monitoring_users_credentials.htdigest
        target: /srv/monitoring_users_credentials.htdigest
        read_only: true

  elasticsearch:
    environment:
      cluster.initial_master_nodes: elasticsearch

  elasticsearch-test:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.1.1
    ports:
      - "6666:9200"
    environment:
      node.name: elasticsearch-test
      discovery.type: single-node
      ES_JAVA_OPTS: -Xms256m -Xmx256m
    ulimits:
      memlock:
        soft: -1
        hard: -1

  status-db-test:
    image: postgres:11
    ports:
      - "8888:5432"

  webapp:
    build:
      context: ./app/
      dockerfile: Dockerfile.dev
    image: peertube-index/app:dev
    environment:
      MIX_ENV: "dev"
    volumes:
      - type: bind
        source: ./app
        target: /srv
      - type: volume
        target: /srv/_build

  error-pages:
    build: ./error_pages

  scan-loop:
    build:
      context: ./app/
      dockerfile: Dockerfile.dev
    image: peertube-index/app:dev
    environment:
      MIX_ENV: "dev"
    volumes:
      - type: bind
        source: ./app
        target: /srv
      - type: volume
        target: /srv/_build
    entrypoint:
      - sh
      - -c
      - 'while true; do sleep 1; done'

  seed-loop:
    build:
      context: ./app/
      dockerfile: Dockerfile.dev
    image: peertube-index/app:dev
    environment:
      MIX_ENV: "dev"
    volumes:
      - type: bind
        source: ./app
        target: /srv
      - type: volume
        target: /srv/_build
    entrypoint:
      - sh
      - -c
      - 'while true; do sleep 1; done'

  status-monitoring-updater:
    build:
      context: ./status_monitoring_updater
      dockerfile: Dockerfile.dev
    image: peertube-index/status-monitoring-updater:dev
    volumes:
      - type: bind
        source: ./status_monitoring_updater
        target: /opt/etl

  prometheus:
    volumes:
      - type: bind
        source: ./prometheus/prometheus.yml
        target: /etc/prometheus/prometheus.yml
        read_only: true

  node-exporter-relay:
    build: ./node_exporter_relay
